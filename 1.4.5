/*
*Institución:			Universidad Americana - Sede de Cartago
*Curso:					Org. de Archivos y Estructura de Datos
*Profesor:				Paula Lafuente Gonzáles
*Autores:				Joshua Méndez Umaña
					Jose Murillo Martínez
					Jeison Romero Romero
					
*Fecha de Inicio:		28/10/2014
*-----------------------------------------------------------------------------------------------
*						Bitácora de Modificación						*
*Modificado por:			<Jeison Romero>
*Fecha de Modificación:			<05/11/2014>
*-----------------------------------------------------------------------------------------------
*Recomendaciones que debe seguir si usted modifica este código:
* 1. Leer la documentació correspondiente del código fuente
* 2. Revisar la documentación Técnica (Manual de Diseño)
*
*/



#include <cstdlib>
#include <iostream>
#include <dos.h>
#include <windows.h>
#include <conio.h>

using namespace std;


//Definición de Estructuras
struct Contacto{
	string nombre;
	string correo;
	string phone;
	Contacto*sgte;
};

struct Letras{
	char letra;
	Contacto*subLista;
	Letras*ante;
	Letras*sgte;
};

struct ListaSMSAEnviar{
	string sms;
	string InfoReceptor;
	ListaSMSAEnviar* sgte;
	ListaSMSAEnviar* ante;
};

struct ColaSMSPrioridad{
	int prioridad;
	ListaSMSAEnviar*subcola;
	ColaSMSPrioridad*sgte;
};

struct ListaSMSEnviados{
	  string MSG;
	  string Destinatario;
      ListaSMSEnviados*sgte;              
};

/*

	1. EditarContacto (ver requerimiento 3 pag 2)
	2. CrearMensaje   (ver req 4)
	3. EnviarMEnsaje  (ver req 5)
	4. VerMensajesEnviados
	5. VerMensajesPendientes

*/

/***** Ronda#1-Inicio-By Che,Joshua & Jeison...\m/ *******/
/***** Ronda#2-Atrasados-By Che,Joshua & Jeison...\m/ ****/

//*Metodo para Crear Contacto
void CrearContacto (Contacto*&LContacto){
		LContacto=NULL; 													
	}
	
	
//*Metodo para Crear Letras
void CrearLetras (Letras*&LLetras){
		LLetras=NULL;   													
	}
	
	
//Â°MÃ©todo para Crear Listas SMS A Enviar
void CrearListasSMSAEnviar(ListaSMSAEnviar* &LEnviar){
		LEnviar=NULL;														
}
	
//Â¬Â¬MÃ©todo para crear Lista SMS enviados
void CrearListaSMSEnviados(ListaSMSEnviados* &LEnviados)
	{LEnviados=NULL;}
	
	
//Â°MÃ©todo para Crear Colas SMS Prioridad
void CrearColasSMSPrioridad(ListaSMSAEnviar* &CSMSPrioridad){
		CSMSPrioridad=NULL;
}
	
//*Metodo para Es Vacia Contacto
bool EsVaciaContacto(Contacto*LContacto){
        if (LContacto == NULL){
			return true;}
		else{
			return false;}
}
	
	//*Metodo para Es Vacia Letras
	bool EsVaciaLetras(Letras*LLetras){
        if (LLetras == NULL){
			return true;}
		else{
			return false;}
	}
	
	//Â°MÃ©todo para Es Vacia Lista SMS A Enviar
	bool EsVaciaListaSMSAEnviar(ListaSMSAEnviar* LEnviar){
		if (LEnviar == NULL){
			return true;}
		else{
			return false;}
	}
	
	//Â¬Â¬ Metodo Es Vacia Lista SMS Enviados
	bool EsVaciaListaSMSEnviados(ListaSMSEnviados* LEnviados)
	{
         if(LEnviados=NULL)
         {return true;}
         else{return false;}
    }
	
	bool ColaVaciaPrioridad(ColaSMSPrioridad* cola){
     	if (cola == NULL){
     	    return true;}
		else{
     		return false;}
	}

/****************************Los Principales********************************/

	//Lista de Char
	void InsertarListaAZ(Letras* &LetrasAZ){
	//Declarar el nuevo nodo a insertar
	Letras* aux = new Letras;
	
	
	//Agregar nodos de la A hasta la Z
		for(char l='A';l<='Z';l++)
		{	
			Letras * nodoAgregar = new Letras;
			nodoAgregar->sgte = NULL;
			nodoAgregar->ante = NULL;
			nodoAgregar->subLista = NULL;
			nodoAgregar->letra=l;
			if (EsVaciaLetras(LetrasAZ)){
			    LetrasAZ = nodoAgregar;
			}else{
				aux = LetrasAZ;
				while (aux->sgte != NULL){
					aux = aux->sgte;}
				if (aux->sgte == NULL){
					nodoAgregar->ante = aux;
					aux->sgte = nodoAgregar;
				}
			}
		}
	
	}//Fin Void InsertarListaAZ

//metodo para comprobar si el numero ya existe by Jeison
	bool NumeroExiste(Contacto* ListaC, string num)
	{
		Contacto* aux=new Contacto;
		if(EsVaciaContacto(ListaC))
		{return false;}
		else
		{
			aux=ListaC;
			while(aux!=NULL)
			{
				if(aux->phone==num)
				{return true;}
				else
				{aux=aux->sgte;}
			}
			return false;
		}
	}
	

//Insertar Contacto by Jeison **Ahora si funca, todo en un solo metodo
void InsertarContacto(Letras* &ListaAZ, char buscar)
{
	//Auxiliares y variables
	Letras* aux = new Letras;
	Contacto* auxSub = new Contacto;
	Contacto* nuevo = new Contacto;
	nuevo->sgte=NULL;
	string num="";
	
	if(EsVaciaLetras(ListaAZ))
	{
		cout<<"Lista Principal Vacia"<<endl;
	}
	else
	{
		aux=ListaAZ;
		//Buscar la letra para verificar si el contacto existe
		//Si no existe ingresarlo
		while(aux!=NULL)
		{
			if(aux->letra!=buscar)
			{aux=aux->sgte;}
			else
			{break;} //rompemos el ciclo ya que encontro la letra
		}
		if(aux->letra==buscar) //si salio del ciclo xq encontro la letra deseada
		{
			auxSub=aux->subLista; //agregamos un auxiliar de la sublista
			cout<<"Digite el numero de telefono"<<endl;
			cin>>num;
			if(NumeroExiste(auxSub, num)) //buscamos si el contacto ya existe
			{	//si exite muestra la info
				cout << "Numero Identificado" << endl;
    			cout << "Nombre: " << auxSub->nombre << endl;
    			cout << "Correo: " << auxSub->correo << endl;
			}
			else
			{	//si no existe ingresamos la info
				cout << "Contacto Nuevo" << endl;
				cout << "Ingrese el Nombre: " <<endl;
				cin>>nuevo->nombre;
				cout << "Ingrese el Correo: " <<endl;
				cin>>nuevo->correo;
				nuevo->phone = num;
				
				if(auxSub==NULL)
				{
					//sublista vacia
					aux->subLista=nuevo;
				}
				else
				{
					//Insertar al inicio
					nuevo->sgte = aux->subLista;
					aux->subLista = nuevo;
					//Acá destaco que todo se va a insertar al inicio, debimos haber diseñado un metodo para ingresar en orden alfabetico
					//Pero aun no vemos ordenamiento xD
				}
			}
			
		}
	}
}
	
//Che, Mostrar
void MostrarSubLista(Contacto* ListaC){
     Contacto* aux = new Contacto;
     if(EsVaciaContacto(ListaC)){
         cout<<"Lista de Contactos vacia"<<endl;
         cout<<endl;
     }else{
         aux = ListaC;
         while(aux!=NULL){
             cout<<"Nombre : "<<aux->nombre<<endl;
             cout<<"Phone : "<<aux->phone<<endl;
             cout<<"Correo : "<<aux->correo<<endl;
             cout<<"\n"<<endl;
             aux = aux->sgte;
         }
     }
}

void MostrarPrincipalSubLista(Letras* ListaL, char LetraBuscar){
     Letras* aux = new Letras;
     Contacto* auxSubCola = new Contacto;
     if(EsVaciaLetras(ListaL)){
         cout<<"No existen la lista de Letras"<<endl;
     }else{
         aux=ListaL;
         while(aux!=NULL && aux->letra!=LetraBuscar){
             
             aux = aux->sgte;
        }
        if(aux==NULL && aux->letra!=LetraBuscar){
        	cout << "No Existe la letra" << endl;
        }else{
        	cout<<"Letra: " << aux->letra << endl;
             auxSubCola = aux->subLista;   
             MostrarSubLista(auxSubCola);
        }
	}
}


//Eliminar Contacto
void EliminarSubLista(Contacto* &ListaC, string num){
	Contacto* aux = new Contacto;
	
	if (EsVaciaContacto(ListaC)){
		cout<<"Contacto no Existente"<<endl;
	}else{
		aux = ListaC;
		if (aux->phone == num){
			aux = aux->sgte;
			ListaC = aux;
		}else{
			while (aux->sgte->sgte != NULL && aux->sgte->phone != num){
				aux = aux->sgte;
			}
			//Elimina al final
			if(aux->sgte->sgte == NULL){
				if(aux->sgte->phone == num){
					aux->sgte = NULL;
				}else{
					cout << "El numero indicado no se encuentra" << endl;
				}
				}else{
					if(aux->sgte->phone == num){
						aux->sgte = aux->sgte->sgte;
					}
			}
		}
	}
}//Fin void


//Editar Contactos by Jeison
void EditarContactos(Letras* &ListaL, char buscar)
{
	string num="";
	int opc=0;
	int dec=0;
	Letras* aux=new Letras;
	Contacto* auxSub=new Contacto;
	Contacto* nuevo= new Contacto;
	
		
		if(EsVaciaLetras(ListaL))
		{
			cout<<"Lista Principal Vacia"<<endl;
		}
		else
		{
			aux=ListaL;
			while(aux!=NULL)
			{
				if(aux->letra!=buscar)
				{
					aux=aux->sgte;
				}
				else
				{
					
						cout<<"Digite el numero de telefono a editar"<<endl;
						cin>>num;
						if(NumeroExiste(aux->subLista, num))
						{
							auxSub=aux->subLista;
							while(auxSub!=NULL)
							{
								if(auxSub->phone==num)
								{
									cout<<"Nombre: "<<auxSub->nombre<<endl;
									cout<<"Tel: "<<auxSub->phone<<endl;
									cout<<"Correo: "<<auxSub->correo<<endl;
									cout<<endl;
									cout<<"Digite la opcion a realizar"<<endl;
									cout<<"1. Eliminar\n2. Editar\n3.Salir"<<endl;
									cin>>opc;
									switch(opc)
									{
	                                	  cout<<endl;
								      case 1:
								           EliminarSubLista(auxSub, num);
								           break;
								      case 2:
								           EliminarSubLista(auxSub, num);
	                                       InsertarContacto(ListaL,buscar);
								           break;
								      default:
	                                       cout<<"Opcion Invalida"<<endl;
								           break;
									}
								}
								else
								{
	                            	auxSub=auxSub->sgte;
	                        	}
							}
						}
					
						else
						{
							cout<<"El numero digitado no existe"<<endl;
							cout<<"Desea no continuar digite la opcion 3, delo contrario digite 1"<<endl;
							cin>>opc;
							if(opc==3){break;}
						}
				}
				if(aux==NULL&&aux->letra!=buscar)
				{cout<<"No Existe la Letra Digitada"<<endl;}
			}
		}
}//Fin Void

void CrearPrioridades (ColaSMSPrioridad* &cola){
	ColaSMSPrioridad* aux = new ColaSMSPrioridad;
	
	for(int i=1; i<=3; i++){
		ColaSMSPrioridad* nuevo = new ColaSMSPrioridad;
		nuevo->sgte=NULL;
		nuevo->subcola = NULL;
		nuevo->prioridad = i;
		if(ColaVaciaPrioridad(cola)){
			cola = nuevo;
		}else{
			aux = cola;
			while(aux->sgte!=NULL){
				aux=aux->sgte;
			}
			if(aux->sgte==NULL){
				aux->sgte = nuevo;
			}
		}
	}
}//Fin void


void MeterCola(ListaSMSAEnviar* &EnvarSMS){
	ListaSMSAEnviar* aux = new ListaSMSAEnviar;
	ListaSMSAEnviar* nuevo = new ListaSMSAEnviar;
	Letras* auxLetras = new Letras;
	Contacto* auxContacto = new Contacto;
	char letra=' ';
	string num;

	nuevo->sgte = NULL;
	
	MostrarPrincipalSubLista(auxLetras, letra);
	cout << "Digite el numero del Contacto Receptor" << endl;
	cin >> num;
	while(auxLetra==letra){
		while(auxContacto->phone==num){
			
		}
	}
	
	
}



void MeterColaPrioridades(ColaSMSPrioridad* &cola){
	int opc=0;
	ColaSMSPrioridad* aux = new ColaSMSPrioridad;
	cout << "Prioridad: \n	1. Urgente\n	2. Medio Urgente\n	3. Sin Urgencia" <<endl;
	cin>>opc;
	if(opc==1 || opc==2 || opc==3){
		if(ColaVaciaPrioridad(cola)){
			cout<<"No existen Prioridaddes"<<endl;
		}else{
			aux = cola;
			while(aux!=NULL && aux->prioridad != opc){
				aux = aux->sgte;
			}
			if(aux==NULL){
				cout<<"No existe dicha prioridad" << endl;
			}else{
				MeterCola(aux->subcola);
			}
		}
	}
}//Fin void
	
	
void OpcionErronea()
{
     system("CLS");
     cout<<"                           Opcion Invalida" << endl;
     cout<<endl;
     cout<<"                 Por Favor digite una entrada valida" << endl;
     cout<<endl;
     system("PAUSE");
     system("CLS");
}
 
 
int main(int argc, char** argv) {
    int opcion=0;
    int op2='0';
    char letra=' ';
	Letras*ListaLetras = new Letras;
	CrearLetras(ListaLetras);
	
	Contacto*ListaC=new Contacto;
	CrearContacto(ListaC);

	InsertarListaAZ(ListaLetras);    
	
	//menu principal - Aqui se enlaza toda la wea
	
	while(opcion!=8)
	{
         system("color 70"); //system("color FondoTexto");
         
         cout<<"                           Sistema de Mensajeria 3J"<<endl;
         cout<< "\t\t ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼\n";
         cout<<endl;
	     cout<<"                          Por favor elija una opcion"<<endl;
	     cout<< "\t\t ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼\n";
	     cout<<endl;
	     cout<<"1. Ver Contactos Existentes"<<endl;
	     cout<<endl;
	     cout<<"2. Anadir Contactos"<<endl;
	     cout<<endl;
	     cout<<"3. Editar / eliminar Contactos"<<endl;
	     cout<<endl;
	     cout<<"4. Crear Mensaje"<<endl;
	     cout<<endl;
	     cout<<"5. Enviar Mensajes"<<endl;
	     cout<<endl;
	     cout<<"6. Mensajes Enviados"<<endl;
	     cout<<endl;
	     cout<<"7. Bandeja de Salida"<<endl;
	     cout<<endl;
	     cout<<"8. Salir"<<endl;
	     cout<<endl;
	     cin>>opcion;                                 //aca se recibe la opcion a escoger por el usuario
	    
             switch(opcion)//Se evalua cada opcion y se despliega el menu elegido segun el caso
             {
                   case 1:
                        system("CLS");
                        while(op2!=2)
                        {
                        	cout<<"Ingrese la letra inicial del contacto a crear" << endl;
                        	cin>>letra;
                            MostrarPrincipalSubLista(ListaLetras, letra);
                            system("PAUSE");
                            op2=2;
                        }
                        system("CLS");
                        op2=0;
                        break;
                   case 2:
                        system("CLS");
                        while(op2!=2)
                        {
                            system("CLS");
                        	cout<<"Ingrese la letra inicial del contacto a crear" << endl;
                        	cin>>letra;
                            InsertarContacto(ListaLetras, letra);
                            cout<<endl;
                            cout<<"1. Continuar"<<endl;
                            cout<<"2. Terminar"<<endl;
                            cin>>op2;
                        }
                        system("CLS");
                        op2=0;
                        break;
                   case 3:
                        system("CLS");
                        while(op2!=3)
                        {
                        	cout<<"Ingrese la letra inicial del contacto a Editar" << endl;
                        	cin>>letra;
                            EditarContactos(ListaLetras, letra);
                            op2=3;
                            //recorrer lista primaria
                            //encontrar caracter
                            //recorrer sublista
                            //encontrar contacto
                            //mostrar contacto
                            //mostrar opciones editar o eliminar
                            //si editar reemplazar contacto
                            //si eliminar pues... eliminar contacto
                            
                        }
                        system("CLS");
                        op2=0;
                        break;
                   case 4:
                        system("CLS");
                        while(op2!=2)
                        {
                            cout<<"Crear Mensaje"<<endl;
                            cout<<"1. xxxxxx"<<endl;   //opcion del menÃº, se cambia por el metodo segun el menu
                            cout<<"2. Menu Principal"<<endl;  //opcion para volver al menu principal
                            cin>>op2;
                        }
                        system("CLS");
                        op2=0;
                        break;
                   case 5:
                        system("CLS");
                        while(op2!=2)
                        {
                            cout<<"Enviar Mensajes"<<endl;
                            cout<<"1. xxxxxx"<<endl;
                            cout<<"2. Menu Principal"<<endl;
                            cin>>op2;
                        }
                        system("CLS");
                        op2=0;
                        break;
                   case 6:
                        system("CLS");
                        while(op2!=2)
                        {
                            cout<<"Mensajes Enviados"<<endl;
                            cout<<"1. xxxxxx"<<endl;
                            cout<<"2. Menu Principal"<<endl;
                            cin>>op2;
                        }
                        system("CLS");
                        op2=0;
                        break;
                   case 7:
                        system("CLS");
                        while(op2!=2)
                        {
                            cout<<"Buzon de Salida"<<endl;
                            cout<<"1. xxxxxx"<<endl;
                            cout<<"2. Menu Principal"<<endl;
                            cin>>op2;
                        }
                        system("CLS");
                        op2=0;
                        break;
                   case 8:
                        system("CLS");
                        cout<<"Hasta Luego"<<endl;
                        
                        break;
                        
                   default:
				   		OpcionErronea();
						break; 	
             }
         }
	
	system("PAUSE");
	return 0;
}
